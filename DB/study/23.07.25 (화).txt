23.07.25 (화)

1. R과 RStudio 개발환경 구축
 1) 데이터 분석을 위한 언어
   - SPSS, SAS
   - Python : 대표적인 머신러닝, 딥러닝에 사용되는 기반언어
   - R : Python과 더불어 머신러닝, 딥러닝에 사용되는 특화된 통계 분석용 프로그램
   - java : weka(자바 기반의 데이터마이닝 소프트웨어)
     c → c++ → java/ios(object-c)/구글(android) → python

 2) R
   - 통계 계산과 시각화 특화된 프로그램
   - 오픈 소스(무료)
   - 1700여개가 넘는 라이브러리(패키지) = 모듈 제공
   - 1995년 개발(두명의 통계학자 로버트 젠틀맨, 로스 이하카)
   - 2002년 R Foundation 설립

 3) R 설치
   IDE(Intergrated Developerment Environment, IDEL) - 통합 개발 툴 → RStudio
   - 최신 패키지를 업데이트 작업을 선행한다.
     R 패키지 업데이트
     update.packages(ask=F), 설치 여부를 묻지 않고 자동으로 설치 진행

 4) RStudio 화면구성
   - Script창 : 여러 줄의 명령어를 입력하고 실행할 수 있는 영역
     # 주석(comment)
   - Console창 : 대화 형식의 명령어 처리 영역, 실행결과 출력 영역
   - Environment/History 
   - Fil/Packages/Help/Views/Plot….

 5) RStudio 환경설정


2. 기본문법
 - 도움말 : help(log), ?log
	    help("for"), 예약어(key word)의 도움말은 앞뒤에 ""를 붙인다.
 - 주석 : #으로 시작
 - 연산자
   산술연산자 : +, -, *, /(실수 몫), %/%(정수 몫), %%(나머지), **(=^, 거듭제곱)
   관계연산자(비교/판단 연산자) : ==, !=, >, >=, <, <= (결과는 참 또는 거짓으로 출력된다.)
   논리연산자 : and(&), or(|), not(!)
		하나 이상의 논리값(TRUE, FALSE)을 가지고 연산을 수행하는 연산자
   함수식 : 함수 - 내장함수와 사용자정의함수


3. 자료형
 1) 변수(variable) : 기억공간(장소), 상수가 저장되는 공간
   - R에서 변수는 만들어 값(상수)을 할당하는 연산자(할당연산자, 대입연산자, 치환연산자)
     변수 <- 상수(값) or 변수 or 수식
     일반적인 대입연산자 : =

 2) 변수명을 만드는 규칙 : 변수명, 함수명, 객체(벡터, 팩터, 행렬, 배열, 데이터프레임, 리스트 등등)
   - 문자, 숫자, 대시(-), 밑줄(_)을 조합해서 생성한다.
   - 단, 첫글자는 문자이다.
   - 공백을 포함하면 안된다.
   - 글자수에 제한은 없다.
   - 소문자로 작성하는 것을 권장

 3) 출력함수 : print
    서식을 이용한 출력함수 : sprintf()
    서식(format) : %s, %i, %f(%.2f) = 소수점 둘째자리까지 표시


4. 자료구조
 1) Scalar(스칼라) : 하나의 데이터를 담는 자료구조
 2) Vector(벡터) : 하나 또는 그 이상의 데이터를 담아서 관리하는 자료구조
   - R에서 vector는 값(상수)들의 집합을 뜻한다.
   - R에서 기본적으로 제공하는 자료형 : numeric(수치형), character(문자형), logical(논리형), complex(복소수형)
   - vector 안에 있는 각 자료를 원소(요소)라고 부른다.
   - vector를 생성하는 방법 : c(), :(콜론, 연속된 값을 처리할때), seq()
   - vector의 요소에 접근하는 위치를 뜻하는 용어 : 인덱스(index)
     index는 1부터 시작한다.
   - 하나의 vector에는 하나의 자료형만 사용할 수 있다.(단일형 자료구조)
   - NA(Not Available) : 결측값(누락된 값), 특수 상수
     NULL
     Inf, -Inf(무한대)
   - vector 연산의 주요 내장 함수

 3) factor(팩터, 요인)
   - 범주형 데이터를 관리할 목적으로 만들어진 자료구조
   - 명목형(단순 분류를 위한 데이터), 서열형

 4) 배열(array)
   - 행렬(matrix) : 2차원 배열, 표형태로 되어 있는 자료구조(행과 열로 구성)
		    vector를 결합한 형태, 단일형 자료(같은 타입의 데이터만 담을 수 있음)
   - 배열(array) : n차원 배열, vector를 여러개 결합한 형태, 단일형 자료

 5) 리스트(list) : 파이썬의 딕셔너리(사전)에 해당
   - 데이터가 저장되는 형식 : 키(해당 값 이름, 중복 불가능)와 값(중복 가능)
   - 리스트안에는 벡터, 팩터, 행렬, 배열, ….
   - 다중형 자료(서로 다른 타입의 데이터를 담을 수 있음), vector의 크기가 서로 달라도 된다.
   - 형식 : list(키 = 값, ….)

 6) 데이터 프레임(Data Frame) : 행렬과 같은 모습을 가진 자료구조
   - 데이터 분석에서 기본이 되는 자료구조
   - 표(table) == 행렬 : 행(관측값, 레코드)과 열(특성, feature, 속성)로 구성
   - data.frame(키 = 값)


5. 제어문
 - 일반적으로 프로그램은 위에서 아래로 진행이 된다.
 - 프로그램의 흐름이나 순서를 제어할 때 사용하는 문장 
 1) 조건문 : 주어진 조건에 만족(참)하는 값을 추출할 때 사용하는 문장
    if : 만약 ~ 라면
    if(조건문) 실행할 문장 

    if ~ else문
    if(조건문) 참일 때 실행할 문장 else 거짓일 때 실행할 문장

    삼항 연산자 : 항을 세개가지고 있는 연산자
    ifelse(조건식, 참일 때, 거짓일 때)

 2) 반복문 : 반복횟수 또는 주어진 조건이 만족할 때까지 반복수행하는 문장
    for(반복횟수 or 반복조건) {반복할 문장} → R
    
    for(시작값, 마지막값, 증가치){} → 다른 언어
    for(1, 10, 1){
	반복문장
    } 1부터 증가해서 10까지, 1씩증가 → 10번 반복

    while(조건식){
	반복문장
    }


6. 파일 입출력
 1) R에서 생성된 변수를 파일 형태로 저장하는 방법 : save(), load()
 2) 엑셀 파일을 저장하고 불러오는 방법