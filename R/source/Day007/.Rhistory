### course 데이터의 총점의 평균 추출
mean(course$score)
### course 데이터의 총점의 평균 추출
library(bizstatp)
mean(course$score)
mean(course$mid)
mean(course$mid, na.rm = T)
### 중앙값 median() : n/2(짝수), n+1/2(홀수)
median(course$score)
median(course$mid)
median(course$mid, na.rm = T)
# 산점도
## ggplot(data, aes(x, y)) + geom_point()
ggplot(course, aes(x = mid, y = final)) + geom_point()
# 산점도
## ggplot(data, aes(x, y)) + geom_point()
ggplot(course, aes(x = mid, y = final)) + geom_point()
library(ggplot2)
# 산점도
## ggplot(data, aes(x, y)) + geom_point()
ggplot(course, aes(x = mid, y = final)) + geom_point()
plot(course[, 5:8])
# 추세선 : geom_smoth()
ggplot(course, aes(x = mid, y = final)) + geom_point() + geom_smooth()
ggplot(course, aes(x = mid, y = final)) + geom_point() + geom_smooth(method = 'lm')
# 추세선 : geom_smooth()
ggplot(course, aes(x = mid, y = final)) + geom_point() + geom_smooth()
ggplot(course, aes(x = mid, y = final)) + geom_point() + geom_smooth(method = 'lm')
# ggpairs() : 확률밀도 그래프, 산점도
install.packages('GGally')
library(GGally)
detach("package:GGally", unload = TRUE)
GGally::ggpairs(course, 5:8)
diamonds
str(diamonds)
# slice_sample()
diamonds_sample <- slice_sample(diamonds, prop = 0.1)
library(dplyr)
# slice_sample()
diamonds_sample <- slice_sample(diamonds, prop = 0.1)
diamonds_sample
str(diamonds)
ggplot(diamonds_sample, aes(x = carat, y = price)) + geom_point() + geom_smooth()
cor(diamonds_sample$carat, diamonds_sample$price)
ggplot(diamonds_sample, aes(x = carat, y = price)) +
geom_point() +
geom_smooth() +
scale_x_log10() +
scale_y_log10()
cor(log10(diamonds_sample$carat), log10(diamonds_sample$price))
# 범주형 변수를 조건으로 수치형 변수의 상관성 분석
ggplot(diamonds_sample, aes(x = carat, y = price, color = cut)) +
geom_point() +
geom_smooth() +
scale_x_log10() + scale_y_log10()
# 범주형 변수를 조건으로 수치형 변수의 상관성 분석
ggplot(diamonds_sample, aes(x = carat, y = price, color = cut)) +
geom_point() +
geom_smooth(se = F) +
scale_x_log10() + scale_y_log10()
ggplot(diamonds_sample, aes(x = carat, y = price, color = cut)) +
geom_smooth() +
scale_x_log10() + scale_y_log10()
ggplot(diamonds_sample, aes(x = carat, y = price, color = color)) +
geom_smooth() +
scale_x_log10() + scale_y_log10()
ggplot(diamonds_sample, aes(x = carat, y = price, color = clarity)) +
geom_smooth() +
scale_x_log10() + scale_y_log10()
ggplot(diamonds_sample, aes(x = carat, y = price, color = clarity)) +
geom_point(alpha = 0.1) +
geom_smooth() +
scale_x_log10() + scale_y_log10()
ggplot(diamonds_sample, aes(x = carat, y = price)) +
geom_point(alpha = 0.1) +
geom_smooth() +
scale_x_log10() + scale_y_log10() +
facet_wrap(~ clarity)
ggplot(diamonds_sample, aes(x = carat, y = price)) +
geom_point() +
geom_smooth() +
scale_x_log10() + scale_y_log10() +
facet_wrap(~ clarity)
