prop_com <- left_join(c, com_Q1, by = 'snippet.title')
prop_com$prop <- round(prop_com$n.y / prop_com$n.x * 100, 2)
arrange_com_Q1 <- prop_com %>% arrange(desc(prop))
ggplot(arrange_com_Q1, aes(x = reorder(snippet.title, prop), y = prop)) + geom_col(fill = 'pink') + coord_flip() +
labs(title = '댓글 비율이 낮은 동영상', x = '카테고리', y = '비율') +
theme(plot.title = element_text(hjust = 0.5))  # 시각화
library(ggplot2)
ggplot(arrange_com_Q1, aes(x = reorder(snippet.title, prop), y = prop)) + geom_col(fill = 'pink') + coord_flip() +
labs(title = '댓글 비율이 낮은 동영상', x = '카테고리', y = '비율') +
theme(plot.title = element_text(hjust = 0.5))  # 시각화
distinct(Youtube$snippet.title)
unique(Youtube$snippet.title)
Youtube %>% cor(view_count, c(likes, dislikes, comment_count))
View(Youtube)
Youtube %>% cor(view_count, c(likes, dislikes, comment_count))
Youtube %>% cor(view_count, likes)
cor(Youtube$view_count, Youtube$likes)
cor(Youtube$view_count, c(Youtube$likes, Youtube$dislikes))
cor(Youtube$view_count, Youtube[, c(11:13)])
cor(Youtube)
cor(Youtube$view_count)
cor(Youtube$view_count, Youtube$likes)
cor(Youtube$view_count, Youtube$dislikes)
cor(Youtube$view_count, Youtube$comment_count)
outlier <- channel_view
channel_view <- Youtube %>%
group_by(channelTitle) %>%
summarise(mean_view = mean(view_count))
unique_ch_category <- ch_category %>%
distinct(channelTitle, .keep_all = TRUE)
# 인기채널의 카테고리
ch_category <- Youtube %>%
select(channelTitle, categoryId, snippet.title)
unique_ch_category <- ch_category %>%
distinct(channelTitle, .keep_all = TRUE)
channel_view <- left_join(channel_view, unique_ch_category,
by = "channelTitle")
outlier <- channel_view
View(outlier)
cate_mean_view <- channel_view %>%   ## 카테고리 별 평균 조회수
group_by(snippet.title) %>%
summarise(view = mean(mean_view))
ggplot(cate_mean_view,
aes(x=reorder(snippet.title, view), y=view)) +
geom_col(fill='skyblue') +
coord_flip() +
labs(x='카테고리', y= '평균 조회수', title = '카테고리 별 평균 조회수')
arrange(cate_medi_view, desc(view))
cate_medi_view <- channel_view %>%   # 카테고리 별 중위수
group_by(snippet.title) %>%
summarise(view = median(mean_view))
ggplot(cate_medi_view,
aes(x=reorder(snippet.title, view), y=view)) +
geom_col(fill='pink') +
coord_flip() +
labs(x='카테고리', y= ' 조회수 중위수', title = '카테고리 별 평균 조회수')
ggplot(cate_mean_view,
aes(x=reorder(snippet.title, view), y=view)) +
geom_col(fill='skyblue') +
coord_flip() +
labs(x='카테고리', y= '평균 조회수', title = '카테고리 별 평균 조회수')
ggplot(cate_medi_view,
aes(x=reorder(snippet.title, view), y=view)) +
geom_col(fill='pink') +
coord_flip() +
labs(x='카테고리', y= ' 조회수 중위수', title = '카테고리 별 평균 조회수')
cate_view <- left_join(cate_mean_view,cate_medi_view, by="snippet.title")
cate_skew_view <- channel_view %>%   # 카테고리 별 왜도
group_by(snippet.title) %>%
summarise(skew = psych::skew(mean_view))
cate_view <- left_join(cate_mean_view,cate_medi_view, by="snippet.title")
head(cate_view)
cate_view <- left_join(cate_view, cate_skew_view, by="snippet.title")
cate_view <- as.data.frame(cate_view)
cate_view <- rename(cate_view,
category = snippet.title,
mean = view.x,
meadian = view.y)
cate_view <- arrange(cate_view, desc(mean))  # 카테고리 조회수의 평균, 중위수, 왜도
View(cate_view)
enter <- channel_view %>%
filter(snippet.title == 'Entertainment')
ggplot(enter, aes(x=mean_view)) +
geom_density() +
labs(x='조회수', y= '빈도', title = 'Entertainment')
ggplot(data=channel_view) +  # 카테고리별 조회수 분포 시각화
geom_density(mapping=aes(x=mean_view,
colour = snippet.title),
size = 1, adjust=10)+
xlim(0,20000000)
install.packages('nord')
library(nord)
ggplot(data=channel_view,  # 그룹별 시각화
aes(x=mean_view,
fill=snippet.title)) +
geom_density()+
xlim(0,5000000) +
facet_grid(snippet.title~.)
channel_view %>%
ggplot(aes(x=mean_view, fill = snippet.title)) +
geom_density(adjust=10) +
facet_wrap(facet = ~snippet.title) +
xlim(0,20000000)
install.packages('moments')
library(moments)
skewness(enter$mean_view)
ggplot(data=channel_view) +  # 카테고리별 조회수 분포 시각화
geom_boxplot(mapping=aes(x=mean_view,
colour = snippet.title))
View(outlier)
enter <- channel_view %>%
filter(snippet.title == 'Entertainment')
boxplot(enter$mean_view)$stats  #'Entertainment'[23354,2441891]
ggplot(data=channel_view,  # 그룹별 시각화
aes(x=mean_view,
fill=snippet.title)) +
geom_density()+
xlim(0,5000000) +
facet_grid(snippet.title~.)
ggplot(data=channel_view) +  # 카테고리별 조회수 분포 시각화
geom_density(mapping=aes(x=mean_view,
colour = snippet.title),
size = 1, adjust=10)+
xlim(0,20000000)
Youtube %>% group_by(snippet.title) %>%
summarise(n = n())
?outliers
install.packages('outliers')
?outliers
library(outliers)
?outliers
?no_outliers
grubbs.test(channel_view)
enter <- channel_view %>%
filter(snippet.title == 'Entertainment')
enter
View(enter)
grubbs.test(enter$mean_view)
outlier.test(enter$mean_view)
outlier.test(enter$mean_view)
outlier.test(enter)
adjbox(enter$mean_view)
scores(enter$mean_view)
scores(enter$mean_view) %>% View()
rm.outlier(enter, 'mean_view')
rm.outlier(enter, 'mean_view', fill = NA)
rm.outlier(enter, 'mean_view', fill = 0)
rm.outlier(enter, 'mean_view')
cor(Youtube$view_count, Youtube$likes)
cor_Y <- cor(Youtube$view_count, Youtube$likes)
cor_Y
cor_Y <- cor(Youtube$view_count, Youtube$dislikes)
cor_Y <-cor(Youtube$view_count, Youtube$comment_count)
cor_Y
cor_Y <- cor(Youtube$view_count, Youtube$likes)
cor(Youtube)
cor(Youtube$view_count)
ggplot(data=channel_view) +  # 카테고리별 조회수 분포 시각화
geom_boxplot(mapping=aes(x=mean_view,
colour = snippet.title))
Youtube %>% group_by(snippet.title) %>%
summarise(n = mean(view_count))
Youtube %>% group_by(snippet.title) %>%
summarise(mean = mean(view_count))
channel_view
Youtube %>% group_by(snippet.title)
Youtube %>% group_by(snippet.title, view_count)
Youtube %>% group_by(snippet.title, view_count) %>% View()
ggplot(data=channel_view) +  # 카테고리별 조회수 분포 시각화
geom_density(mapping=aes(x=mean_view,
colour = snippet.title),
size = 1, adjust=10)+
xlim(0,20000000)
ggplot(data=channel_view) +  # 카테고리별 조회수 분포 시각화
geom_boxplot(mapping=aes(x=mean_view,
colour = snippet.title))
channel_view
Youtube %>% group_by(snippet.title) %>%
summarise(mean = mean(view_count))
Youtube %>% group_by(snippet.title) %>%
select(snippet.title, view_count)
Youtube %>% group_by(snippet.title) %>%
select(snippet.title, view_count) %>% View()
Youtube %>% group_by(snippet.title) %>%
select(snippet.title, view_count) %>%
arrange(snippet.title)
Youtube %>% group_by(snippet.title) %>%
select(snippet.title, view_count) %>%
arrange(snippet.title, desc(view_count))
Youtube %>% group_by(snippet.title) %>%
select(snippet.title, view_count) %>%
arrange(snippet.title, desc(view_count)) %>% View()
cate_view <- Youtube %>% group_by(snippet.title) %>%
select(snippet.title, view_count) %>%
arrange(snippet.title, desc(view_count)) %>% View()
cate_view <- Youtube %>% group_by(snippet.title) %>%
select(snippet.title, view_count) %>%
arrange(snippet.title, desc(view_count))
View(cate_view)
ggplot(enter, aes(x=mean_view)) +
geom_density() +
labs(x='조회수', y= '빈도', title = 'Entertainment')
ggplot(data=channel_view) +  # 카테고리별 조회수 분포 시각화
geom_density(mapping=aes(x=mean_view,
colour = snippet.title),
size = 1, adjust=10)+
xlim(0,20000000)
View(cate_view)
ggplot(data=cate_view) +  # 카테고리별 조회수 분포 시각화
geom_density(mapping=aes(x=view_count,
colour = snippet.title),
size = 1, adjust=10)
ggplot(data=channel_view,  # 그룹별 시각화
aes(x=mean_view,
fill=snippet.title)) +
geom_density()+
xlim(0,5000000) +
facet_grid(snippet.title~.)
ggplot(data=cate_view,  # 그룹별 시각화
aes(x=view_count,
fill=snippet.title)) +
geom_density()+
facet_grid(snippet.title~.)
for(i in 1:length(unique(Youtube$snippet.title))){
d <- outliers::rm.outlier(Youtube[Youtube$snippet.title == unique(Youtube$snippet.title)[i], "view_count"])
print(skewness(d))
}
unique(youtube$snippet.title)
unique(Youtube$snippet.title)
for(i in 1:length(unique(Youtube$snippet.title))){
d <- outliers::rm.outlier(Youtube[Youtube$snippet.title == unique(Youtube$snippet.title)[i], "view_count"])
ggplot(data=d) +
geom_density(mapping=aes(x=view_count,
colour = snippet.title), size = 1, adjust = 5)
}
for(i in 1:length(unique(Youtube$snippet.title))){
d <- outliers::rm.outlier(Youtube[Youtube$snippet.title == unique(Youtube$snippet.title)[i], "view_count"])
print(skewness(d))
}
ske_cate <- for(i in 1:length(unique(Youtube$snippet.title))){
d <- outliers::rm.outlier(Youtube[Youtube$snippet.title == unique(Youtube$snippet.title)[i], "view_count"])
print(skewness(d))
}
ske_cate$snippet.title <- unique(Youtube$snippet.title)
ske_cate
ske_cate <- for(i in 1:length(unique(Youtube$snippet.title))){
d <- outliers::rm.outlier(Youtube[Youtube$snippet.title == unique(Youtube$snippet.title)[i], "view_count"])
print(skewness(d))
}
ske_cate
ske_cate <- for(i in 1:length(unique(Youtube$snippet.title))){
d <- outliers::rm.outlier(Youtube[Youtube$snippet.title == unique(Youtube$snippet.title)[i], "view_count"])
print(skewness(d))
}
ske_cate
for(i in 1:length(unique(Youtube$snippet.title))){
d <- outliers::rm.outlier(Youtube[Youtube$snippet.title == unique(Youtube$snippet.title)[i], "view_count"])
print(skewness(d))
}
for(i in 1:length(unique(Youtube$snippet.title))){
d <- outliers::rm.outlier(Youtube[Youtube$snippet.title == unique(Youtube$snippet.title)[i], "view_count"])
print(skewness(d))
} -> ske_cate
ske_cate
for(i in 1:length(unique(Youtube$snippet.title))){
d <- outliers::rm.outlier(Youtube[Youtube$snippet.title == unique(Youtube$snippet.title)[i], "view_count"])
print(skewness(d))
}
for(i in 1:length(unique(Youtube$snippet.title))){
d <- outliers::rm.outlier(Youtube[Youtube$snippet.title == unique(Youtube$snippet.title)[i], "view_count"])
print(skewness(d))
} -> ske_cate
ske_cate
for(i in 1:length(unique(Youtube$snippet.title))){
d <- outliers::rm.outlier(Youtube[Youtube$snippet.title == unique(Youtube$snippet.title)[i], "view_count"])
print(skewness(d) -> ske_cate)
}
ske_cate
result_df <- data.table()
install.packages('data.table')
library(data.table)
result_df <- data.table()
for(i in 1:length(unique(Youtube$snippet.title))){
d <- outliers::rm.outlier(Youtube[Youtube$snippet.title == unique(Youtube$snippet.title)[i], "view_count"])
result_df <- print(skewness(d))
}
result_df
result_df <- data.frame()
for(i in 1:length(unique(Youtube$snippet.title))){
d <- outliers::rm.outlier(Youtube[Youtube$snippet.title == unique(Youtube$snippet.title)[i], "view_count"])
result_df <- rbind(result_df, skewness(d))
}
result_df
View(result_df)
result_df$snippet.title <- unique(Youtube$snippet.title)
result_df
for(i in 1:length(unique(Youtube$snippet.title))){
d <- outliers::rm.outlier(Youtube[Youtube$snippet.title == unique(Youtube$snippet.title)[i], "view_count"])
print(skewness(d))
}
d <- outliers::rm.outlier(Youtube[Youtube$snippet.title == unique(Youtube$snippet.title)[i], "view_count"])
for(i in 1:length(unique(Youtube$snippet.title))){
d <- outliers::rm.outlier(Youtube[Youtube$snippet.title == unique(Youtube$snippet.title)[i], "view_count"])
}
for(i in 1:length(unique(Youtube$snippet.title))){
d <- outliers::rm.outlier(Youtube[Youtube$snippet.title == unique(Youtube$snippet.title)[i], "view_count"])
View(Youtube)
}
result_df <- data.frame()
result_df
for(i in 1:length(unique(Youtube$snippet.title))){
d <- outliers::rm.outlier(Youtube[Youtube$snippet.title == unique(Youtube$snippet.title)[i], "view_count"])
result_df <- rbind(Youtube$snippet.title, d)
}
for(i in 1:length(unique(Youtube$snippet.title))){
d <- outliers::rm.outlier(Youtube[Youtube$snippet.title == unique(Youtube$snippet.title)[i], "view_count"])
result_df <- rbind(Youtube$snippet.title, d)
}
for(i in 1:length(unique(Youtube$snippet.title))){
d <- outliers::rm.outlier(Youtube[Youtube$snippet.title == unique(Youtube$snippet.title)[i], "view_count"])
print(Youtube)
}
for(i in 1:length(unique(Youtube$snippet.title))){
d <- outliers::rm.outlier(Youtube[Youtube$snippet.title == unique(Youtube$snippet.title)[i], "view_count"])
View(Youtube)
}
View(d)
result_df <- data.frame()
for(i in 1:length(unique(Youtube$snippet.title))){
d <- outliers::rm.outlier(Youtube[Youtube$snippet.title == unique(Youtube$snippet.title)[i], "view_count"])
result_df <- rbind(Youtube$snippet.title, Youtube$view_count, d)
}
for(i in 1:length(unique(Youtube$snippet.title))){
d <- outliers::rm.outlier(Youtube[Youtube$snippet.title == unique(Youtube$snippet.title)[i], "view_count"])
result_df <- rbind(Youtube$snippet.title, Youtube$view_count, d)
}
# 빈 데이터프레임 생성
result_df <- data.frame(snippet_title = character(), view_count_original = numeric(), view_count_cleaned = numeric(), stringsAsFactors = FALSE)
unique_titles <- unique(Youtube$snippet.title)
for (i in 1:length(unique_titles)) {
title <- unique_titles[i]
subset_data <- Youtube[Youtube$snippet.title == title, "view_count"]
cleaned_data <- outliers::rm.outlier(subset_data, method = "Z-score", fill = TRUE, median.center = TRUE)
result_df <- result_df %>%
add_row(snippet_title = title, view_count_original = subset_data, view_count_cleaned = cleaned_data)
}
for (i in 1:length(unique_titles)) {
title <- unique_titles[i]
subset_data <- Youtube[Youtube$snippet.title == title, "view_count"]
cleaned_data <- outliers::rm.outlier(subset_data, method = "Z-score", fill = TRUE, median.center = TRUE)
result_df <- result_df %>%
add_row(snippet_title = title, view_count_original = subset_data, view_count_cleaned = cleaned_data)
}
# 빈 데이터프레임 생성
result_df <- data.frame(snippet_title = character(), view_count_original = numeric(), view_count_cleaned = numeric(), stringsAsFactors = FALSE)
unique_titles <- unique(Youtube$snippet.title)
for (i in 1:length(unique_titles)) {
title <- unique_titles[i]
subset_data <- Youtube[Youtube$snippet.title == title, "view_count"]
# 이상치 처리
cleaned_data <- outliers::rm.outlier(subset_data)
result_df <- result_df %>%
add_row(snippet_title = title, view_count_original = subset_data, view_count_cleaned = cleaned_data)
}
# 결과 확인
print(result_df)
# 빈 데이터프레임 생성
result_df <- data.frame(snippet_title = character(), view_count_original = numeric(), view_count_cleaned = list(), stringsAsFactors = FALSE)
unique_titles <- unique(Youtube$snippet.title)
for (i in 1:length(unique_titles)) {
title <- unique_titles[i]
subset_data <- Youtube[Youtube$snippet.title == title, "view_count"]
# 이상치 처리
cleaned_data <- outliers::rm.outlier(subset_data)
# 결과를 리스트로 저장
result_df <- result_df %>%
add_row(snippet_title = title, view_count_original = subset_data, view_count_cleaned = list(cleaned_data))
}
# 빈 리스트 생성
result_list <- list()
unique_titles <- unique(Youtube$snippet.title)
for (i in 1:length(unique_titles)) {
title <- unique_titles[i]
subset_data <- Youtube[Youtube$snippet.title == title, "view_count"]
# 이상치 처리
cleaned_data <- outliers::rm.outlier(subset_data)
# 결과를 리스트로 저장
result_list[[i]] <- list(snippet_title = title, view_count_original = subset_data, view_count_cleaned = cleaned_data)
}
# 리스트를 데이터프레임으로 변환
result_df <- do.call(rbind, lapply(result_list, as.data.frame))
# 결과 확인
print(result_df)
# 리스트를 데이터프레임으로 변환
result_df <- do.call(rbind, lapply(result_list, as.data.frame))
# 빈 데이터프레임 생성
result_df <- data.frame(snippet_title = character(), view_count_original = numeric(), view_count_cleaned = numeric(), stringsAsFactors = FALSE)
unique_titles <- unique(Youtube$snippet.title)
for (i in 1:length(unique_titles)) {
title <- unique_titles[i]
subset_data <- Youtube[Youtube$snippet.title == title, "view_count"]
# 이상치 처리
cleaned_data <- outliers::rm.outlier(subset_data)
# 데이터프레임에 행 추가
result_df <- result_df %>%
add_row(snippet_title = title, view_count_original = sum(subset_data), view_count_cleaned = sum(cleaned_data))
}
# 결과 확인
print(result_df)
View(result_df)
View(result_df)
for (i in 1:length(unique_titles)) {
title <- unique_titles[i]
subset_data <- Youtube[Youtube$snippet.title == title, "view_count"]
# 이상치 처리
cleaned_data <- outliers::rm.outlier(subset_data)
# 데이터프레임에 행 추가
result_df <- result_df %>%
add_row(snippet_title = title, view_count_original = subset_data, view_count_cleaned = cleaned_data)
}
rm.outlier(Youtube[Youtube$snippet.title == title, "view_count"])
Youtube %>% group_by(snippet.title) %>% arrange(snippet.title, desc(view_count))
Youtube %>% group_by(snippet.title) %>% arrange(snippet.title, desc(view_count)) %>%
select(title, snippet.title, view_count)
Youtube %>% group_by(snippet.title) %>% arrange(snippet.title, desc(view_count)) %>%
select(title, snippet.title, view_count) %>%
View()
arrange_cate <- Youtube %>% group_by(snippet.title) %>% arrange(snippet.title, desc(view_count)) %>%
select(title, snippet.title, view_count)
rm.outlier(arrange_cate[arrange_cate$snippet.title == title, "view_count"])
cate_enter <- arrange_cate[, arrange_cate$snippet.title == 'Entertainment']
cate_enter <- arrange_cate[, arrange_cate$snippet.title == '
Entertainment']
cate_enter <- arrange_cate %>% filter(snippet.title == 'Entertainment')
cate_enter
rm.outlier(arrange_cate, "view_count")
rm.outlier(arrange_cate[, "view_count"])
for(i in 1:length(unique(Youtube$snippet.title))){
d <- outliers::rm.outlier(Youtube[Youtube$snippet.title == unique(Youtube$snippet.title)[i], "view_count"])
print(skewness(d))
}
unique(Youtube$snippet.title)  # 정렬순서
ggplot(arrange_com_Q1, aes(x = reorder(snippet.title, prop), y = prop)) + geom_col(fill = 'pink') + coord_flip() +
labs(title = '댓글 비율이 낮은 동영상', x = '카테고리', y = '비율') +
theme(plot.title = element_text(hjust = 0.5))  # 시각화
title <- dislikes %>%
filter(snippet.title == 'Education') %>% pull(title)  # Extract the character vector from the data frame column
# Replace special characters with spaces
title <- str_replace_all(string = title,
pattern = '\\W',
replacement = ' ')
# 기타 패키지
library(stringr)
library(dplyr)
library(KoNLP)
library(multilinguer)
# Replace special characters with spaces
title <- str_replace_all(string = title,
pattern = '\\W',
replacement = ' ')
title <- title %>% str_squish()  # 연속된 공백 제거
nouns <- extractNoun(title)  # 제목의 명사 추출하기(list 형태로 반환)
title <- dislikes %>%
filter(snippet.title == 'Education')
title
dislikes <- Youtube %>%
filter(dislikes_prop > 0.04) %>%
select(title, channelTitle, snippet.title)  # 3분위보다 높은 싫어요 비율을 가진 동영상 추출
title <- dislikes %>%
filter(snippet.title == 'Education')
title
title %>% filter(title %in% '삼성전자')
View(title)
filter(title$title %in% '삼성전자')
View(title)
filter(title$title %in% '삼성')
title %>% filter(title %in% '삼성')
View(title)
tt <- dislikes %>%
filter(snippet.title == 'Education')
tt %>% filter(title %in% c('삼성', 'w전자'))
tt %>% filter(title %in% c('삼성', '전자'))
tt %>% filter(title %in% '삼성')
filter(tt$title %in% '삼성')
tt
tt %>% select(title) %>% filter(title %in% '삼성')
tt %>% select(title)
View(title)
View(title)
tt %>% filter(title %in% '삼성')
tt %>% filter(title %in% "삼성")
ttt <- tt %>% filter(title %in% "삼성")
ttt
tt$tttt <- tt$title
tt %>% filter(tttt %in% "삼성")
title <- dislikes %>%
filter(snippet.title == 'Education')
View(title)
str(title)
dislikes %>%
filter(snippet.title == 'Education' & title %in% '삼성')
wirte.csv(title, file = 'title.csv')
write.csv(title, file = 'title.csv')
write.csv(title, file = 'title.csv', fileEncoding = 'UTF-8')
write.csv(title, file = 'title.csv', fileEncoding = 'UTF-8')
write.csv(title, file = 'title.csv', fileEncoding = 'cp949')
title <- likes %>%
filter(snippet.title == 'People & Blogs')
title <- likes %>%
filter(snippet.title == 'News & Politics')
title <- dislikes %>%
filter(snippet.title == 'News & Politics')
