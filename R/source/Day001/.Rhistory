# csv 형태로 저장된 파일을 읽어오는 작업
x <- read.csv('C:/K_digital/data/a.csv')
x
# csv 형태로 저장된 파일을 읽어오는 작업
help(read.csv)
x <- read.csv('C:/K_digital/data/a.csv')
x
x <- read.csv('C:/K_digital/data/a.csv', encoding = 'UTF-8')
x
x <- read.csv('C:/K_digital/data/a.csv', locale = locale('ko', encoding = 'euc-kr'))
x
x <- read.csv('C:/K_digital/data/a.csv', locale = locale('ko', encoding = 'cp949'))
x
x <- read_csv('C:/K_digital/data/a.csv')
x
x <- read_csv('C:/K_digital/data/a.csv', locale = locale('ko', encoding = 'cp949'))
x
install.packages("readr")
library(readr)
data01 <- read_csv("a.csv",locale=locale('ko',encoding='cp949'))
data01 <- read_csv("C:/K_digital/data/a.csv",locale=locale('ko',encoding='cp949'))
data01
x <- read_csv('C:/K_digital/data/a.csv', locale = locale('ko', encoding = 'c'))
x <- read_csv('C:/K_digital/data/a.csv', locale = locale('ko', encoding = 'cp949'))
x
x <- read.csv('C:/k_digital/data/a.csv',header=T,
fileEncoding = 'euc-kr',
encoding = 'utf-8');
x
x <- read.csv('C:/k_digital/data/a.csv',
fileEncoding = 'euc-kr',
encoding = 'utf-8');
x
y <- read.csv('C:/k_digital/data/b.csv',
fileEncoding = 'euc-kr',
encoding = 'utf-8');
y
y <- read.csv('C:/k_digital/data/b.csv', header = F,
fileEncoding = 'euc-kr',
encoding = 'utf-8');
y
# 텍스트 파일의 형식을 읽어오는 작업
## 텍스트 파일은 배열 형태로 읽어들인다.
## 공백 문자, 탭, 줄바꿈 등을 기준으로 단어 단위로 배열에 저장되어 처리된다.
## what = '자료형', 다양한 자료형이 섞여 있을 경우 what = ''
## UTF-8로 저장하면 한글이 깨질 수 있다. 메모장 windows 한글지원(ms949)
a <- scan('C:/k_digital/data/sample.txt', what='')
a
a[4]
## 데이터 프레임 형태로 읽어오는 작업
c <- read.table('C:/k_digital/data/sample.txt', header = T, sep='\t')
c
## 데이터 프레임 형태로 읽어오는 작업
c <- read.table('C:/k_digital/data/sample.txt', header = T, sep='\t')  # tqp = \t
c
## 데이터 프레임 형태로 읽어오는 작업
c <- read.table('C:/k_digital/data/sample.txt', header = T, sep='\t')  # tqp = \t
c
# 엑셀파일을 읽어오는 방법
## 별도의 패키지를 불러오는 작업 : readxl
install.packages('readxl')
library(readxl)
df_exam <- read_excel('C:/k_digital/data/excel_exam.xlsx')
df_exam
mean(df_exam$english)
mean(df_exam$science)
df_exam_novar <- read_excel('C:/k_digital/data/excel_exam_novar.xlsx')
df_exam_novar
df_exam_novar <- read_excel('C:/k_digital/data/excel_exam_novar.xlsx', col_names = F)
df_exam_novar
df_exam_sheet <- read_excel('C:/k_digital/data/excel_exam_sheet.xlsx', sheet = 3)
df_exam_sheet
#데이터 표 형태로 데이터를 보여주는 View()
View(iris)
str(iris)
#실제 데이터를 사용할 때
data(mtcars)
d <- matrix(1:9, ncol=3);d
#행들의 합 구하기
apply(d,1,sum) ##1-행방향, 2-열방향
apply(d,2,sum)
###iris 데이터의 각 컬럼(feature)의 합을 계산
#apply(iris[행인덱스,열인덱스], 2, sum)
apply(iris[,1:4], 2, sum)
#### rowSums(), colSums(), rowMeans(), colMeans()
colSums(iris[, 1:4]) #위랑 같은 결과
# lapply(x,함수), x - 벡터 또는 리스트
###결과가 리스트로 반환이 된다
result <- lapply(1:3, function(x){x*2});result
